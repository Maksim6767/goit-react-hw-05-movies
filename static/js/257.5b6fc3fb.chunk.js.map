{"version":3,"file":"static/js/257.5b6fc3fb.chunk.js","mappings":"uUAGaA,GAAQC,EAAAA,EAAAA,IAAOC,EAAAA,IAAPD,CAAH,8CAGLE,GAASF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,iZAqBNI,EAAOJ,EAAAA,GAAAA,IAAH,sJAOJK,EAAOL,EAAAA,GAAAA,IAAH,qGAMJM,EAAIN,EAAAA,GAAAA,EAAH,oEAIDO,EAAMP,EAAAA,GAAAA,IAAH,wFAKHQ,EAAgBR,EAAAA,GAAAA,IAAH,wIAMbS,EAAUT,EAAAA,GAAAA,IAAH,wGAMPU,GAAWV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,2W,SC2CrB,EAvFqB,WACnB,OAAgCY,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAaF,EAASG,MAAQH,EAASG,MAAMC,KAAhC,WAInBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,6CAAyCR,EAAzC,4DAClBD,GAAU,GACV,IAAMU,EAAM,mCAAG,8GAEWC,EAAAA,EAAAA,GAAMF,GAFjB,OAELG,EAFK,OAGXhB,EAAYgB,GAHD,gDAKXd,GAAS,GALE,yBAOXE,GAAU,GAPC,4EAAH,qDAUZU,GACD,GAAE,CAACT,IACJ,IACEY,EAOElB,EAPFkB,YACAC,EAMEnB,EANFmB,KACAC,EAKEpB,EALFoB,OACAC,EAIErB,EAJFqB,SACAC,EAGEtB,EAHFsB,aACAC,EAEEvB,EAFFuB,MACAC,EACExB,EADFwB,aAGF,GAAKA,EAIL,OACE,UAAC,KAAD,WACGpB,IAAU,SAACqB,EAAA,EAAD,KACX,UAACpC,EAAD,CAAQqC,GAAIhB,EAAZ,WACE,SAACxB,EAAD,IADF,aAICgB,IAAS,2EAEV,iCACE,UAACX,EAAD,YACE,SAACG,EAAD,CACEiC,IAAKT,EA5CM,kCA4CuBA,EA3C5B,iIA4CNU,IAAG,OAAEL,QAAF,IAAEA,EAAAA,EAASJ,KAEhB,UAAC3B,EAAD,YACE,iCACG+B,QADH,IACGA,EAAAA,EAASJ,EADZ,KACoBK,EAAaK,MAAM,EAAG,GAD1C,QAGA,0CAAiC,GAAfP,GAAmBQ,QAAQ,GAA7C,QACA,sCACA,SAACrC,EAAD,UAAI4B,KACJ,oCACA,SAAC5B,EAAD,UACG2B,EAAOW,OACJX,EAAOY,KAAI,qBAAGb,IAAH,IAAoBc,KAAK,MACpC,0BAIV,UAACtC,EAAD,YACE,oDACA,UAACC,EAAD,YACE,SAACC,EAAD,CAAU6B,GAAG,OAAOf,MAAO,CAAEC,KAAMF,GAAnC,mBAGA,SAACb,EAAD,CAAU6B,GAAG,UAAUf,MAAO,CAAEC,KAAMF,GAAtC,4BAKJ,SAAC,EAAAwB,SAAD,CAAUC,UAAW,KAArB,UACE,SAAC,KAAD,WAKT,C","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { NavLink, Link } from 'react-router-dom';\nexport const Arrow = styled(BiArrowBack)`\n  margin-right: 5px;\n`;\nexport const Button = styled(Link)`\n  display: flex;\n  border: 0;\n  cursor: pointer;\n  background-color: #e9e8e8f5;\n  border-radius: 5px;\n  height: 25px;\n  width: 100px;\n  justify-content: center;\n  align-items: center;\n  :hover {\n    background-color: orange;\n    svg {\n      transition: all 0.3s;\n      color: red;\n    }\n    color: #ffffff;\n  }\n  margin-bottom: 15px;\n  transition: all 0.3s;\n`;\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 30px;\n  margin-bottom: 15px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  border-radius: 1.2em;\n`;\nexport const Cont = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  padding: 20px;\n`;\nexport const P = styled.p`\n  font-size: 18px;\n  letter-spacing: 0.6;\n`;\nexport const Img = styled.img`\n  object-fit: cover;\n  border-radius: 1.2em;\n  width: 300px;\n`;\nexport const AdditionalDiv = styled.div`\n  padding: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  margin-bottom: 15px;\n  border-radius: 1.2em;\n`;\nexport const LinkDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 15px;\n`;\nexport const LinkInfo = styled(NavLink)`\n  background-color: #e9e8e8f5;\n  width: 70px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n  height: 25px;\n  :hover {\n    background-color: orange;\n    color: #ffffff;\n    transition: all 0.3s;\n  }\n  &.active {\n    background-color: orange;\n    box-shadow: 0 2px 4px orange;\n  }\n`;","import { Wrapper } from 'pages/Home/Home.styled';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetch } from 'components/Fetch';\nimport Loader from '../../components/Loader/Loader';\nimport {\n  Arrow,\n  Button,\n  Wrap,\n  Cont,\n  P,\n  Img,\n  AdditionalDiv,\n  LinkDiv,\n  LinkInfo,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [fullInfo, setFullInfo] = useState({});\n  const [error, setError] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const { id } = useParams();\n  const location = useLocation();\n  const backAdress = location.state ? location.state.from : `/movies`;\n  const firstImgLink = 'https://image.tmdb.org/t/p/w300';\n  const defaultImg = `https://st4.depositphotos.com/14953852/22772/v/600/depositphotos_227725020-stock-illustration-no-image-available-icon-flat.jpg`;\n\n  useEffect(() => {\n    const fullInfoLink = `https://api.themoviedb.org/3/movie/${id}?api_key=7bfeb33324f72574136d1cd14ae769b5&language=en-US`;\n    setLoader(true);\n    const getApi = async () => {\n      try {\n        const getInfo = await fetch(fullInfoLink);\n        setFullInfo(getInfo);\n      } catch {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getApi();\n  }, [id]);\n  const {\n    poster_path,\n    name,\n    genres,\n    overview,\n    vote_average,\n    title,\n    release_date,\n  } = fullInfo;\n\n  if (!release_date) {\n    return;\n  }\n\n  return (\n    <Wrapper>\n      {loader && <Loader />}\n      <Button to={backAdress}>\n        <Arrow />\n        Go back\n      </Button>\n      {error && <h2>Sorry, something went wrong. Please try again</h2>}\n\n      <>\n        <Wrap>\n          <Img\n            src={poster_path ? firstImgLink + poster_path : defaultImg}\n            alt={title ?? name}\n          />\n          <Cont>\n            <h3>\n              {title ?? name} ({release_date.slice(0, 4)})\n            </h3>\n            <h4>User Score: {(vote_average * 10).toFixed(1)}%</h4>\n            <h4>Overview</h4>\n            <P>{overview}</P>\n            <h4>Genres</h4>\n            <P>\n              {genres.length\n                ? genres.map(({ name }) => name).join(', ')\n                : 'unknown genres'}\n            </P>\n          </Cont>\n        </Wrap>\n        <AdditionalDiv>\n          <h4>Additional Information</h4>\n          <LinkDiv>\n            <LinkInfo to=\"cast\" state={{ from: backAdress }}>\n              Cast\n            </LinkInfo>\n            <LinkInfo to=\"reviews\" state={{ from: backAdress }}>\n              Reviews\n            </LinkInfo>\n          </LinkDiv>\n        </AdditionalDiv>\n        <Suspense ffullback={null}>\n          <Outlet />\n        </Suspense>\n      </>\n    </Wrapper>\n  );\n};\nexport default MovieDetails;"],"names":["Arrow","styled","BiArrowBack","Button","Link","Wrap","Cont","P","Img","AdditionalDiv","LinkDiv","LinkInfo","NavLink","useState","fullInfo","setFullInfo","error","setError","loader","setLoader","id","useParams","location","useLocation","backAdress","state","from","useEffect","fullInfoLink","getApi","fetch","getInfo","poster_path","name","genres","overview","vote_average","title","release_date","Loader","to","src","alt","slice","toFixed","length","map","join","Suspense","ffullback"],"sourceRoot":""}